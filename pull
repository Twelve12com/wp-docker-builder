#!/bin/bash
source global.sh




# Get data from .env file
if [[ -f .env ]]; then

	source .env

fi




# Builder updates
self_update




# Confirmation
if [[ $1 == --hard ]]; then
	
	read -ep "Are you sure you want to get latest changes from Git? This will replace all the changes you might have done. (yes | no): " ACTION
	[[ $ACTION != yes ]] && exit || sleep 0

fi




# DETECT DB CHANGES
DB_FILE=site/database/dump/wordpress_data.sql
DB_SUM1=$(md5 -r $DB_FILE)


# Pulling latest changes from git
(
	cd site/
	echo "Checking the latest remote changes..."
	git pull
	if [[ $1 == --hard ]]; then
		git fetch
		git reset --hard origin/master
		git clean -df wp/
		git pull
	fi
	echo -e "Git pull complete ... ${GREEN}done${RESET}"
)


# DETECT DB CHANGES
DB_SUM2=$(md5 -r $DB_FILE)
if [[ $DB_SUM1 != $DB_SUM2 ]]; then


	echo "DB changed."


	# If installed
	if [[ $IP != 127.0.0.1 ]] && [[ -f .env ]]; then

		echo "Closing server..."
		docker-compose down
		echo -e "Server is down ... ${GREEN}done${RESET}"

	else

		echo -e "${GREEN}Server needs to be restarted to apply DB changes.${RESET}"

	fi


	echo "Old data removing..."
	rm -rf site/database/mysql/
	echo -e "Remove old data ... ${GREEN}done${RESET}"


else


	echo "DB is identical."


fi




# If installed
if [[ $IP != 127.0.0.1 ]] && [[ -f .env ]]; then


	echo "Site is building again..."
	docker-compose up -d
	echo -e "Build server again ... ${GREEN}done${RESET}"


	# Check MySQL to be ready
	wait_for_mysql


	# Ask the registered URL and do the replacements
	db_url_update


	echo -e "Server is ${GREEN}up${RESET}"


fi



echo -e "${GREEN}PULLING COMPLETE${RESET}"