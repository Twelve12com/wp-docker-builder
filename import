#!/bin/bash
source global.sh



# Install if not already
if [[ $IP == 127.0.0.1 ]] || [[ ! -f .env ]]; then

	echo "Redirecting to installation..."
	bash install
	exit

fi



# Get data from .env file
source .env



# Builder updates
self_update



echo "IMPORTING STARTED"



# Move the new files to be imported
if [[ -d "${BASEDIR}/site/import" ]]; then


	# Move the SQL file
	if [[ -f "${BASEDIR}/site/import/db.sql" ]]; then

		rm -rf "${BASEDIR}/site/database/dump/wordpress_data.sql"
		mv "${BASEDIR}/site/import/db.sql" "${BASEDIR}/site/database/dump/wordpress_data.sql"

	elif [[ -f "${BASEDIR}/site/import/mysql.sql" ]]; then

		rm -rf "${BASEDIR}/site/database/dump/wordpress_data.sql"
		mv "${BASEDIR}/site/import/mysql.sql" "${BASEDIR}/site/database/dump/wordpress_data.sql"

	else

		echo -e "${RED}'db.sql' or 'mysql.sql' file does not exist in 'site/import/' folder.${RESET}"
		exit

	fi


	# Move the wp-content folder
	if [[ -d "${BASEDIR}/site/import/wp-content" ]]; then

		rm -rf "${BASEDIR}/site/wp/wp-content"
		mv "${BASEDIR}/site/import/wp-content" "${BASEDIR}/site/wp/wp-content"

	fi


	# Remove the import folder
	rm -rf "${BASEDIR}/site/import"


fi



echo "Closing server..."
docker-compose down
echo -e "Server is down ... ${GREEN}done${RESET}"



echo "Old data removing..."
rm -rf "${BASEDIR}/site/database/mysql/"
echo -e "Remove old data ... ${GREEN}done${RESET}"



echo "Site is building again..."
docker-compose up -d
echo -e "Build server again ... ${GREEN}done${RESET}"



# Check MySQL to be ready
wait_for_mysql



# Ask the registered URL and do the replacements
db_url_update



#Â Backup the DB after the changes
db_backup



echo -e "IMPORTING NEW DB ${GREEN}COMPLETE${RESET}"