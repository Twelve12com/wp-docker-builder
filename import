#!/bin/bash
source global.sh



# Install if not already
if [[ $IP == 127.0.0.1 ]] || [[ ! -f .env ]]; then

	echo "Redirecting to installation..."
	bash install
	exit

fi



# Get data from .env file
source .env



# Builder updates
self_update



echo "IMPORTING STARTED"



# Move import files
move_import_files



echo "Closing server..."
docker-compose down
echo -e "Server is down ... ${GREEN}done${RESET}"



echo "Old data removing..."
rm -rf "${BASEDIR}/site/database/mysql/"
echo -e "Remove old data ... ${GREEN}done${RESET}"



echo "Site is building again..."
docker-compose up -d
echo -e "Build server again ... ${GREEN}done${RESET}"



# Check MySQL to be ready
wait_for_mysql



echo -e "Updating the temporary files..."

# Make the wp-content folder temporary
if [[ -d site/wp/tmp_wp-content ]]; then
	
	# Delete the old wp-content folder
	rm -rf site/wp/wp-content
	mv site/wp/tmp_wp-content site/wp/wp-content

fi

# Old version
if [[ -d site/tmp_wp-content ]]; then
	
	# Delete the old wp-content folder
	rm -rf site/wp-content
	mv site/tmp_wp-content site/wp-content

fi

echo -e "Temporary files update ... ${GREEN}done${RESET}"



# Update the permissions
permission_update site/



# Update old version remote files
if [[ -d site/wp-content ]]; then

	echo -e "Old version detected..."


	# Remove the old wp-content
	rm -rf site/wp/wp-content


	# Move our wp-content folder
	mv site/wp-content site/wp/wp-content


	echo -e "Old version updated ... ${GREEN}done${RESET}"

fi



# Build the GULP
if [[ -f site/wp/wp-content/themes/${SLUG}/package.json ]]; then



	# If Gulp not installed, build the gulp
	if [[ ! -d site/wp/wp-content/themes/${SLUG}/node_modules ]] || [[ ! -d site/wp/wp-content/themes/${SLUG}/node_modules/gulp ]]; then


		# RUN THE GULP
		echo "GULP is installing..."
		docker-compose run --no-deps --rm gulp npm run build
		echo -e "GULP installed ... ${GREEN}done${RESET}"


	fi



fi



# Ask the registered URL and do the replacements
db_url_update



echo -e "IMPORTING ${GREEN}COMPLETE${RESET}"